# -*- coding: utf-8 -*-
"""Sprint_II.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tHMz1Ciu0kGeMxRPvgLKqLj6xsV8nGGS
"""

!pip install pandasql
!pip install geopandas
!pip install basemap

!pip install basemap-data-hires

import pandas as pd
import numpy as np
from pandas import DataFrame, Series
from datetime import datetime
import pandasql
import matplotlib.pyplot as plt 
import altair as alt
import folium
import geopandas as gpd

# Os 4 primeiros dessa query são os estados que possuem maior frequência de ocorrências

count_ocorrencias_estado = pd.read_csv('todos_ovnis.csv')

q = """
SELECT COUNT(state), state FROM count_ocorrencias_estado GROUP BY state ORDER BY COUNT(state) DESC;
"""

pandasql.sqldf(q, locals())

"""Definindo "shapes" por por cidades dos 4 "States" com mais ocorrências."""

shape = pd.read_csv('todos_ovnis.csv')

q = """
SELECT shape, state FROM shape WHERE state = "CA" OR state = "FL" OR state = "WA" OR state = "TX" ORDER BY state;
"""

df = pandasql.sqldf(q, locals())
count_shapes = df.groupby(['State','Shape']).size().reset_index(name='Count')

print(count_shapes)

"""Plotando gráfico de barras agrupadas baseado na consulta anterior"""

barras_agrupadas = alt.Chart(count_shapes).mark_bar().encode(
    alt.Column('State'), alt.X('Shape'),
    alt.Y('Count', axis=alt.Axis(grid=False)),
    alt.Color('Shape'))
  
barras_agrupadas.display()

barras_empilhadas = alt.Chart(count_shapes).mark_bar().encode(
    alt.X('State'),
    alt.Y('Count', axis=alt.Axis(grid=False)),
    alt.Color('Shape')).properties(
    width={"step": 50},
)
  
barras_empilhadas.display()

"""Iniciando "folium.Map" a partir de Montana com o intuito de manter os EUA centralizado"""

m = folium.Map(location=[40, -95], zoom_start=4)
m

"""Montando um gráfico de calor baseado nos locais dos EUA com maior quantidade de ocorrências a partir da biblioteca "Folium"


"""

url = (
    "https://raw.githubusercontent.com/python-visualization/folium/master/examples/data"
)
state_geo = f"{url}/us-states.json"
state_unemployment = f"{url}/US_Unemployment_Oct2012.csv"
state_data = pd.read_csv(state_unemployment)

cities = pd.read_csv('todos_ovnis.csv')

q = """
SELECT State, COUNT(State) as Count, Country FROM cities WHERE Country = 'USA' GROUP BY State HAVING COUNT(State) > 0 ORDER BY Count(State);
"""

df = pandasql.sqldf(q, locals())
merge = pd.merge(df, state_data, how = 'inner')
df_merge = df.drop_duplicates(subset='State')

df_merge

folium.Choropleth(
    geo_data=state_geo,
    name="choropleth",
    data=df_merge,
    columns=["State", "Count"],
    key_on="feature.id",
    fill_color="YlOrRd",
    fill_opacity=0.7,
    line_opacity=.1,
    legend_name="Count of cases",
).add_to(m)

folium.LayerControl().add_to(m)

m.save('.mapa_USA.html')
m

m2 = folium.Map(location=[33, -103], zoom_start=4)
m2

url = (
    "https://raw.githubusercontent.com/python-visualization/folium/master/examples/data"
)
county_geo = f"{url}/us_counties_20m_topo.json"
state_unemployment = f"{url}/US_Unemployment_Oct2012.csv"
state_data = pd.read_csv(state_unemployment)

uscities = pd.read_csv('uscities.csv')

uscities_new = uscities.drop(['city_ascii', 'state_name', 'county_fips', 'county_name', 'population', 'density', 'source', 'military', 'incorporated', 'timezone', 'ranking', 'zips', 'id'], axis=1)

q = """
SELECT City, lat, lng FROM uscities_new WHERE state_id = 'CA' ORDER BY City;
"""

df_cities = pandasql.sqldf(q, locals())

df_cities_renamed = df_cities.rename(columns={'city': 'City'})

uscities = pd.read_csv('todos_ovnis.csv')

q = """
SELECT State, City, COUNT(City) as Count FROM uscities WHERE State = 'CA' GROUP BY City HAVING COUNT(City) > 0 ORDER BY COUNT(City) DESC;
"""

df = pandasql.sqldf(q, locals())
cities_merge = pd.merge(df_cities_renamed, df, how = 'inner')

cities_merge

BBox = [cities_merge['lng'].min(), cities_merge['lng'].max(), cities_merge['lat'].min(), cities_merge['lat'].max()]
BBox

ruh_m = pltimread('map.png')
ruh_m

"""Onde na Califórnia está localizada a maior quantidade de visualizações de objetos voadores não identificados? Investigue e descreva a possível razão para esse local ter a maior quantidade de visualizações.

San Diego com 392 ocorrências. Essa quantidade pode se justificar através de sua própria localização, no estado mais populoso dos Estados Unidos, e ser também a segunda cidade mais populosa da região. Além disso, é dificultada a visualização de estrelas no céu devido à poluição luminosa, portanto, luzes inusitadas são dadas como objetos voadores não identificados, informações essas constatados pelos dados.
"""

fig, ax = plt.subplots(figsize = (8,7))

ax.scatter(cities_merge.lng,cities_merge.lat, zorder=0.5, alpha= 0.8, c='b', s=cities_merge.Count)

ax.set_title('Ocorrências por cidade (CA)')
ax.set_xlim(BBox[0],BBox[1])
ax.set_ylim(BBox[2],BBox[3])

ax.imshow(ruh_m, zorder=0, extent = BBox, aspect= 'equal')